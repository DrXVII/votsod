=== Objectives =================================================================
- [x] Organise project repository
- [x] Create an initial design for the engine core
- [x] Refactor and review old code
- Flesh out engine core
-- core mechanics
-- basic AI/mobs
-- basic level generation
-- line of sight

=== Steps ======================================================================
# [x] Organise project repository
-----------------------------
- [x] check and throw out the unnecessary doc files left over form asciiworld
-- [x] text docs, ideas, etc
-- [x] xmind project maps
-- [x] diagrams
- [x] reorganise code files in repo
-- [x] deicide on the repo structure
-- [x] create a makefile

# [x] Create an initial design for the engine core
--------------------------------------------------
- [x] create a basic dia diagram to have a visualisation and work from there

# [x] Refactor and review old code
------------------------------
- [x] refactor code distribution to comply with K&R-Stroustrup style
- [x] refactor naming to comply with K&R-Stroustrup style
- [x] review the code and remember the old work and loose ends

# Flesh out engine core
-----------------------
(the idea is to make a reusable engine skeleton)

## core mechanics
- reintroduce wall collisions
-- [x] create a System class to serve as higher level handler of procesess
-- implement actor action handling in the Map class

- refactor code. The current style is inconsistent and quite far from ISO.

- implement treating of the main char as one of the char objects in the map
	and render as such. (Throw away the hard-stamped '@' at middle of view-port
	placeholder)
	[salvaged old description]
		- Create an array of char objects in the Map object
		- place main char in the array
		- reconfigure viewport accordingly
					v	v	v
		- later base the mob class inheritance off of the Character class
		- then the main char and all the mobs and npc's would perform their turns as
		system iterates through the array
	[END]

## basic AI/mobs
- basic mobs
-- introduce an AI-less mob (let's consider it a training dummy :D )
-- implement basic mob AI (only homing for now)

## basic level generation
- generate a random level (for now some generic rooms connected with corridors)
	for testing

## line of sight
- basic line of sight (no worries about obstacles for now)
-- player (display render)
-- mob AI behaviour

=== Ideas ======================================================================
# Core Engine mechanics
-----------------------
- Levels of illumination
-- Calculate per tile
-- Effects on line of sight
-- Illuminating with objects (sconces, carried torches or other equipment)

- Flowing fluids.

# Gameplay
----------
- The player will have the ability to enter a person's inner world at certain
	circumstances. Each world will have a certain flavour depending on the
	main principality/inhabitants. Each world will be unique as it will be
	randomly generated each time in accordance to the prevalent theme of the
	level.

- outdoor environments
